name: Deploy Pages

on:
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    continue-on-error: true
    timeout-minutes: 5
    runs-on: [self-hosted, Windows, X64]
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Intentionally Fail to Test Fallback
        run: exit 1

      - name: Generate Build Info File
        shell: pwsh
        run: |
          $buildTime = (Get-Date).ToUniversalTime().ToString("o")
          $commitMessage = "${{ github.event.head_commit.message }}".Replace("`n", " ").Replace("`r", "")
          $jsonContent = @"
          {
            "commitMessage": "$commitMessage",
            "buildTime": "$buildTime"
          }
          "@
          $jsonContent | Out-File -FilePath wwwroot/build-info.json -Encoding utf8

      - name: Publish .NET Project
        run: dotnet publish Frontend.csproj --configuration Release --output build

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/wwwroot

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  fallback:
    if: needs.build-and-deploy.outcome == 'failure'
    needs: build-and-deploy
    runs-on: windows-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0

      - name: Generate Build Info File
        shell: pwsh
        run: |
          $buildTime = (Get-Date).ToUniversalTime().ToString("o")
          $commitMessage = "${{ github.event.head_commit.message }}".Replace("`n", " ").Replace("`r", "")
          $jsonContent = @"
          {
            "commitMessage": "$commitMessage",
            "buildTime": "$buildTime"
          }
          "@
          $jsonContent | Out-File -FilePath wwwroot/build-info.json -Encoding utf8

      - name: Publish .NET Project
        run: dotnet publish Frontend.csproj --configuration Release --output build

      - name: Upload GitHub Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build/wwwroot

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
