@inherits LayoutComponentBase
@inject IAccountManagement Acct
@inject ILocalStorageService LS

<MudThemeProvider @bind-IsDarkMode="_isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <AuthorizeView>
        <Authorized>
            <MudAppBar Elevation="1">
                <MudButton Href="/" Variant="Variant.Text" Color="Color.Inherit" Class="ml-2">Home</MudButton>
                <MudButton Href="/BuildInfo" Variant="Variant.Text" Color="Color.Inherit">Build Info</MudButton>
                <MudButton Href="/RandomWord" Variant="Variant.Text" Color="Color.Inherit">Random Word</MudButton>
                <MudButton Href="/Weather" Variant="Variant.Text" Color="Color.Inherit">Weather</MudButton>

                <MudSpacer />

                <MudIconButton Icon="@(_isDarkMode? Icons.Material.Filled.WbSunny : Icons.Material.Filled.Brightness4)" Color="Color.Inherit" OnClick="@ToggleThemeAsync" />

                <MudButton Variant="Variant.Text" Color="Color.Inherit" OnClick="LogoutAsync" StartIcon="@Icons.Material.Filled.Logout">Logout</MudButton>
            </MudAppBar>
        </Authorized>
    </AuthorizeView>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.Large" Class="my-6 pt-6">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    private bool _isDarkMode;

    protected override async Task OnInitializedAsync()
    {
        var storedTheme = await LS.GetItemAsync<string>("theme");
        _isDarkMode = storedTheme != "light";
    }

    private async Task ToggleThemeAsync()
    {
        _isDarkMode = !_isDarkMode;
        var newTheme = _isDarkMode ? "dark" : "light";
        await LS.SetItemAsync<string>("theme", newTheme);
    }

    private async Task LogoutAsync()
    {
        await Acct.LogoutAsync();
    }
}