@page "/Weather"
@using System.Text.Json
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<MudText Typo="Typo.h3" GutterBottom=true>Weather</MudText>
<MudText Class="mb-4">This component demonstrates fetching data from the server using a MudTable.</MudText>

@if (forecasts == null)
{
    @if (error != null)
    {
        <MudAlert Severity="Severity.Error">@error</MudAlert>
    }
    else
    {
        <MudProgressCircular Color="Color.Default" Indeterminate="true" />
    }
}
else
{
    <MudTable Items="@forecasts" Hover="true" Striped="true" Bordered="true" Dense="true" Class="mt-4">
        <HeaderContent>
            <MudTh>Date</MudTh>
            <MudTh>Temp. (C)</MudTh>
            <MudTh>Temp. (F)</MudTh>
            <MudTh>Summary</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Date">@context.Date.ToShortDateString()</MudTd>
            <MudTd DataLabel="Temp. (C)">@context.TemperatureC</MudTd>
            <MudTd DataLabel="Temp. (F)">@context.TemperatureF</MudTd>
            <MudTd DataLabel="Summary">@context.Summary</MudTd>
        </RowTemplate>
    </MudTable>
}

@code {
    private WeatherForecast[]? forecasts;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            HttpResponseMessage response = await Http.GetAsync("/WeatherForecast");
            response.EnsureSuccessStatusCode();

            forecasts = await response.Content.ReadFromJsonAsync<WeatherForecast[]>();

            if (forecasts == null)
            {
                error = $"Could not load forecasts from the following response: {await response.Content.ReadAsStringAsync()}";
            }
        }
        catch (Exception ex)
        {
            error = $"An error occurred while fetching data: {ex.Message}";
        }
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);

        public string? Summary { get; set; }
    }
}