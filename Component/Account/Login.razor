@attribute [AllowAnonymous]
@using Microsoft.AspNetCore.Authorization
@using System.ComponentModel.DataAnnotations
@inject IAccountManagement Acct

<PageTitle>Login</PageTitle>

<MudGrid Justify="Justify.Center" Class="mt-16">
    <MudItem xs="12" sm="8" md="6" lg="4">

        @if (errors)
        {
            <MudPaper Class="pa-4" Elevation="0">
                @foreach (string error in errorList)
                {
                    <MudAlert Severity="Severity.Error" Class="mb-2">@error</MudAlert>
                }
            </MudPaper>
        }

        <EditForm Model="@loginModel" OnValidSubmit="@HandleLogin">
            <DataAnnotationsValidator />

            <MudCard>

                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.h5">Login</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
                <MudCardContent>
                    <MudTextField Label="Username" @bind-Value="loginModel.Username" For="@(() => loginModel.Username)" Required="true" />
                    <MudTextField Label="Password" Class="mt-3" @bind-Value="loginModel.Password" For="@(() => loginModel.Password)" InputType="InputType.Password" Required="true" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Outlined" Color="Color.Primary" Disabled="@loading" Loading="@loading" Class="ml-auto">
                        Login
                    </MudButton>
                </MudCardActions>
                <MudProgressLinear Color="Color.Primary" Indeterminate="true" Class="my-7" hidden="@(!loading)" />
            </MudCard>
        </EditForm>
    </MudItem>
</MudGrid>


@code {
    private bool loading, errors = false;
    private string[] errorList = [];
    private LoginModel loginModel = new();

    public class LoginModel
    {
        [Required]
        public string Username { get; set; } = "";

        [Required]
        public string Password { get; set; } = "";
    }

    private async Task HandleLogin()
    {
        if (loading)
        {
            return;
        }

        loading = true;
        errors = false;

        try
        {
            var result = await Acct.LoginAsync(loginModel.Username, loginModel.Password);
            if (!result.Succeeded)
            {
                errors = true;
                errorList = result.ErrorList;
            }
        }
        catch (HttpRequestException)
        {
            errors = true;
            errorList = ["Problems connecting to the server"];
        }
        catch (Exception ex)
        {
            errors = true;
            errorList = [$"An unexpected error occurred: {ex.Message}"];
        }
        finally
        {
            loading = false;
        }
    }
}